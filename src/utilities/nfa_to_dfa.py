from collections import defaultdict, deque
import os


# Writing The Result to A Text file
def write_dfa_to_file(
    dfa_states, dfa_initial_state, dfa_accepting_states, dfa_transitions, filename
):
    os.makedirs(os.path.dirname(filename), exist_ok=True)

    with open(filename, "w", encoding="utf-8") as file:
        file.write("DFA States:\n")
        for state in dfa_states:
            file.write(f"{state}\n")

        file.write("\nDFA Initial State:\n")
        file.write(f"{dfa_initial_state}\n")

        file.write("\nDFA Accepting States:\n")
        for state in dfa_accepting_states:
            file.write(f"{state}\n")

        file.write("\nDFA Transitions:\n")
        for state, transitions in dfa_transitions.items():
            for terminal, next_state in transitions.items():
                file.write(f"{state} --{terminal}--> {next_state}\n")

    print(f"DFA written to {filename}")


# Defining the NFA
def convert_nfa_to_dfa(filename):
    nfa_states = {
        "qS": {
            "ε": [
                "q0",
                "q5",
                "q7",
                "q12",
                "q14",
                "q16",
                "q18",
                "q22",
                "q24",
                "q28",
                "q30",
                "q32",
                "q35",
                "q37",
                "q39",
                "q41",
                "q43",
                "q45",
                "q47",
                "q49",
                "q53",
                "q57",
                "q66",
                "q73",
                "q75",
                "q77",
                "q79",
                "q85",
                "q92",
                "q94",
                "q96",
                "q98",
                "q100",
                "q107",
                "q114",
                "q119",
                "q121",
                "q123",
                "q125",
                "q127",
                "q129",
                "q131",
                "q133",
                "q135",
                "q137",
                "q139",
                "q141",
                "q143",
                "q146",
                "q149",
                "q159",
                "q161",
                "q163",
                "q169",
                "q171",
                "q173",
                "q182",
            ]
        },
        "q0": {"main": ["q1"]},
        "q1": {"GLOBVARS": ["q2"], "ε": ["q5", "q7"]},
        "q2": {"ALGO": ["q3"], "ε": ["q18"]},
        "q3": {"FUNCTIONS": ["q4"], "ε": ["q141", "q143"]},
        "q4": {},
        "q5": {"ε": ["q6"]},
        "q6": {},
        "q7": {"VTYP": ["q8"], "ε": ["q12", "q14"]},
        "q8": {"VNAME": ["q9"], "ε": ["q16"]},
        "q9": {",": ["q10"]},
        "q10": {"GLOBVARS": ["q11"], "ε": ["q5", "q7"]},
        "q11": {},
        "q12": {"num": ["q13"]},
        "q13": {},
        "q14": {"text": ["q15"]},
        "q15": {},
        "q16": {"token_v": ["q17"]},
        "q17": {},
        "q18": {"begin": ["q19"]},
        "q19": {"INSTRUC": ["q20"], "ε": ["q20", "q24"]},
        "q20": {"end": ["q21"]},
        "q21": {},
        "q22": {"ε": ["q23"]},
        "q23": {},
        "q24": {"COMMAND": ["q25"], "ε": ["q28", "q30", "q32", "q35", "q37", "q39"]},
        "q25": {";": ["q26"]},
        "q26": {"INSTRUC": ["q27"], "ε": ["q20", "q24"]},
        "q27": {},
        "q28": {"skip": ["q29"]},
        "q29": {},
        "q30": {"halt": ["q31"]},
        "q31": {},
        "q32": {"print": ["q33"]},
        "q33": {"ATOMIC": ["q34"], "ε": ["q41", "q43"]},
        "q34": {},
        "q35": {"ASSIGN": ["q36"], "ε": ["q49", "q53"]},
        "q36": {},
        "q37": {"CALL": ["q38"], "ε": ["q57"]},
        "q38": {},
        "q39": {"BRANCH": ["q40"], "ε": ["q66"]},
        "q40": {},
        "q41": {"VNAME": ["q42"], "ε": ["q16"]},
        "q42": {},
        "q43": {"CONST": ["q44"], "ε": ["q45", "q47"]},
        "q44": {},
        "q45": {"token_n": ["q46"]},
        "q46": {},
        "q47": {"token_t": ["q48"]},
        "q48": {},
        "q49": {"VNAME": ["q50"], "ε": ["q16"]},
        "q50": {"<": ["q51"]},
        "q51": {"input": ["q52"]},
        "q52": {},
        "q53": {"VNAME": ["q54"], "ε": ["q16"]},
        "q54": {"=": ["q55"]},
        "q55": {"TERM": ["q56"], "ε": ["q73", "q75", "q77"]},
        "q56": {},
        "q57": {"FNAME": ["q58"], "ε": ["q139"]},
        "q58": {"(": ["q59"]},
        "q59": {"ATOMIC": ["q60"], "ε": ["q41", "q43"]},
        "q60": {",": ["q61"]},
        "q61": {"ATOMIC": ["q62"], "ε": ["q41", "q43"]},
        "q62": {",": ["q63"]},
        "q63": {"ATOMIC": ["q64"], "ε": ["q41", "q43"]},
        "q64": {")": ["q65"]},
        "q65": {},
        "q66": {"if": ["q67"], "ε": ["q96", "q98"]},
        "q67": {"COND": ["q68"]},
        "q68": {"then": ["q69"]},
        "q69": {"ALGO": ["q70"], "ε": ["q18"]},
        "q70": {"else": ["q71"]},
        "q71": {"ALGO": ["q72"], "ε": ["q18"]},
        "q72": {},
        "q73": {"ATOMIC": ["q74"], "ε": ["q41", "q43"]},
        "q74": {},
        "q75": {"CALL": ["q76"], "ε": ["q57"]},
        "q76": {},
        "q77": {"OP": ["q78"], "ε": ["q79", "q85"]},
        "q78": {},
        "q79": {"UNOP": ["q80"], "ε": ["q119", "q121"]},
        "q80": {},
        "q81": {"(": ["q82"]},
        "q82": {"ARG": ["q83"], "ε": ["q92", "q94"]},
        "q83": {")": ["q84"]},
        "q84": {},
        "q85": {
            "BINOP": ["q86"],
            "ε": ["q123", "q125", "q127", "q129", "q131", "q133", "q135", "q137"],
        },
        "q86": {"(": ["q87"]},
        "q87": {"ARG": ["q88"], "ε": ["q92", "q94"]},
        "q88": {",": ["q89"]},
        "q89": {"ARG": ["q90"], "ε": ["q92", "q94"]},
        "q90": {")": ["q91"]},
        "q91": {},
        "q92": {"ATOMIC": ["q93"], "ε": ["q41", "q43"]},
        "q93": {},
        "q94": {"OP": ["q95"], "ε": ["q79", "q85"]},
        "q95": {},
        "q96": {"SIMPLE": ["q97"], "ε": ["q100"]},
        "q97": {},
        "q98": {"COMPOSIT": ["q99"], "ε": ["q107", "q114"]},
        "q99": {},
        "q100": {
            "BINOP": ["q101"],
            "ε": ["q123", "q125", "q127", "q129", "q131", "q133", "q135", "q137"],
        },
        "q101": {"(": ["q102"]},
        "q102": {"ATOMIC": ["q103"], "ε": ["q41", "q43"]},
        "q103": {",": ["q104"]},
        "q104": {"ATOMIC": ["q105"], "ε": ["q41", "q43"]},
        "q105": {")": ["q106"]},
        "q106": {},
        "q107": {
            "BINOP": ["q108"],
            "ε": ["q123", "q125", "q127", "q129", "q131", "q133", "q135", "q137"],
        },
        "q108": {"(": ["q109"]},
        "q109": {"SIMPLE": ["q110"], "ε": ["q100"]},
        "q110": {",": ["q111"]},
        "q111": {"SIMPLE": ["q112"], "ε": ["q100"]},
        "q112": {")": ["q113"]},
        "q113": {},
        "q114": {"UNOP": ["q115"], "ε": ["q119", "q121"]},
        "q115": {"(": ["q116"]},
        "q116": {"SIMPLE": ["q117"], "ε": ["q100"]},
        "q117": {")": ["q118"]},
        "q118": {},
        "q119": {"not": ["q120"]},
        "q120": {},
        "q121": {"sqrt": ["q122"]},
        "q122": {},
        "q123": {"or": ["q124"]},
        "q124": {},
        "q125": {"and": ["q126"]},
        "q126": {},
        "q127": {"eq": ["q128"]},
        "q128": {},
        "q129": {"grt": ["q130"]},
        "q130": {},
        "q131": {"add": ["q132"]},
        "q132": {},
        "q133": {"sub": ["q134"]},
        "q134": {},
        "q135": {"mul": ["q136"]},
        "q136": {},
        "q137": {"div": ["q138"]},
        "q138": {},
        "q139": {"token_f": ["q140"]},
        "q140": {},
        "q141": {"ε": ["q142"]},
        "q142": {},
        "q143": {"DECL": ["q144"], "ε": ["q146"]},
        "q144": {"FUNCTIONS": ["q145"], "ε": ["q141", "q143"]},
        "q145": {},
        "q146": {"HEADER": ["q147"], "ε": ["q149"]},
        "q147": {"BODY": ["q148"], "ε": ["q163"]},
        "q148": {},
        "q149": {"FTYP": ["q150"], "ε": ["q159", "q161"]},
        "q150": {"FNAME": ["q151"], "ε": ["q139"]},
        "q151": {"(": ["q152"]},
        "q152": {"VNAME": ["q153"], "ε": ["q16"]},
        "q153": {",": ["q154"]},
        "q154": {"VNAME": ["q155"], "ε": ["q16"]},
        "q155": {",": ["q156"]},
        "q156": {"VNAME": ["q157"], "ε": ["q16"]},
        "q157": {")": ["q158"]},
        "q158": {},
        "q159": {"num": ["q160"]},
        "q160": {},
        "q161": {"void": ["q162"]},
        "q162": {},
        "q163": {"PROLOG": ["q164"], "ε": ["q169"]},
        "q164": {"LOCVARS": ["q165"], "ε": ["q173"]},
        "q165": {"ALGO": ["q166"], "ε": ["q18"]},
        "q166": {"EPILOG": ["q167"], "ε": ["q171"]},
        "q167": {"SUBFUNCS": ["q168"], "ε": ["q182"]},
        "q168": {"end": ["q184"]},
        "q169": {"{": ["q170"]},
        "q170": {},
        "q171": {"}": ["q172"]},
        "q172": {},
        "q173": {"VTYP": ["q174"], "ε": ["q12", "q14"]},
        "q174": {"VNAME": ["q175"], "ε": ["q16"]},
        "q175": {",": ["q176"]},
        "q176": {"VTYP": ["q177"], "ε": ["q12", "q14"]},
        "q177": {"VNAME": ["q178"], "ε": ["q16"]},
        "q178": {",": ["q179"]},
        "q179": {"VTYP": ["q180"], "ε": ["q12", "q14"]},
        "q180": {"VNAME": ["q181"], "ε": ["q16"]},
        "q181": {},
        "q182": {"FUNCTIONS": ["q183"], "ε": ["q141", "q143"]},
        "q183": {},
        "q184": {},
    }

    nfa_initial_state = "qS"
    nfa_accepting_states = {
        "q4",
        "q6",
        "q11",
        "q13",
        "q15",
        "q17",
        "q21",
        "q23",
        "q27",
        "q29",
        "q31",
        "q34",
        "q36",
        "q38",
        "q40",
        "q42",
        "q44",
        "q46",
        "q48",
        "q52",
        "q56",
        "q65",
        "q72",
        "q74",
        "q76",
        "q78",
        "q84",
        "q91",
        "q93",
        "q95",
        "q97",
        "q99",
        "q106",
        "q113",
        "q118",
        "q120",
        "q122",
        "q124",
        "q126",
        "q128",
        "q130",
        "q132",
        "q134",
        "q136",
        "q138",
        "q140",
        "q142",
        "q145",
        "q148",
        "q158",
        "q160",
        "q162",
        "q190",
        "q170",
        "q172",
        "q181",
        "q18",
    }

    # Computing ε-closure for each state
    def epsilon_closure(state, nfa_states):
        closure = set()
        stack = [state]
        while stack:
            current = stack.pop()
            if current not in closure:
                closure.add(current)
                stack.extend(nfa_states.get(current, {}).get("ε", []))
        return closure

    # Computing ε-closures for all states
    epsilon_closures = {
        state: epsilon_closure(state, nfa_states) for state in nfa_states
    }

    # Initialize DFA
    dfa_states = {}
    dfa_initial_state = frozenset(epsilon_closures[nfa_initial_state])
    dfa_accepting_states = set()
    unprocessed_states = deque([dfa_initial_state])
    dfa_transitions = defaultdict(dict)

    # Processing each DFA state
    while unprocessed_states:
        current_dfa_state = unprocessed_states.popleft()
        if current_dfa_state in dfa_states:
            continue
        dfa_states[current_dfa_state] = True
        if any(state in nfa_accepting_states for state in current_dfa_state):
            dfa_accepting_states.add(current_dfa_state)

        # Determining transitions for each terminal
        for terminal in [
            "skip",
            "halt",
            "(",
            ")",
            ",",
            "not",
            "sqrt",
            "or",
            "and",
            "eq",
            "grt",
            "add",
            "sub",
            "mul",
            "div",
            "{",
            "}",
            ";",
            "=",
            "<",
            "input",
            "main",
            "begin",
            "end",
            "if",
            "then",
            "else",
            "print",
            "num",
            "text",
            "void",
            "token_t",
            "token_n",
            "token_f",
            "token_v",
            "PROG",
            "GLOBVARS",
            "GLOBVARS",
            "VTYP",
            "VTYP",
            "VNAME",
            "ALGO",
            "INSTRUC",
            "INSTRUC",
            "COMMAND",
            "COMMAND",
            "COMMAND",
            "COMMAND",
            "COMMAND",
            "COMMAND",
            "ATOMIC",
            "ATOMIC",
            "CONST",
            "CONST",
            "ASSIGN",
            "ASSIGN",
            "CALL",
            "BRANCH",
            "TERM",
            "TERM",
            "TERM",
            "OP",
            "OP",
            "ARG",
            "ARG",
            "COND",
            "COND",
            "SIMPLE",
            "COMPOSIT",
            "COMPOSIT",
            "UNOP",
            "UNOP",
            "BINOP",
            "BINOP",
            "BINOP",
            "BINOP",
            "BINOP",
            "BINOP",
            "BINOP",
            "BINOP",
            "FNAME",
            "FUNCTIONS",
            "FUNCTIONS",
            "DECL",
            "HEADER",
            "FTYP",
            "FTYP",
            "BODY",
            "PROLOG",
            "EPILOG",
            "LOCVARS",
            "SUBFUNCS",
        ]:
            next_states = set()
            for nfa_state in current_dfa_state:
                next_states.update(nfa_states.get(nfa_state, {}).get(terminal, []))
            if next_states:
                next_dfa_state = frozenset(
                    set.union(*[epsilon_closures[state] for state in next_states])
                )
                dfa_transitions[current_dfa_state][terminal] = next_dfa_state
                if next_dfa_state not in dfa_states:
                    unprocessed_states.append(next_dfa_state)

    # Code Usage
    print("Conversion Successful!!")
    write_dfa_to_file(
        dfa_states, dfa_initial_state, dfa_accepting_states, dfa_transitions, filename
    )
